apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: mongodb
        image: mcr.microsoft.com/mirror/docker/library/mongo:4.2
        ports:
        - containerPort: 27017
          name: mongodb
        resources: {}
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
spec:
  ports:
  - port: 27017
  selector:
    app: mongodb
  type: ClusterIP    
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: rabbitmq
        image: mcr.microsoft.com/mirror/docker/library/rabbitmq:3.10-management-alpine
        ports:
        - containerPort: 5672
          name: rabbitmq-amqp
        - containerPort: 15672
          name: rabbitmq-http
        env:
        - name: RABBITMQ_DEFAULT_USER
          value: "username"
        - name: RABBITMQ_DEFAULT_PASS
          value: "password"
        resources: {}
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
spec:
  selector:
    app: rabbitmq
  ports:
    - name: rabbitmq-amqp
      port: 5672
      targetPort: 5672
    - name: rabbitmq-http
      port: 15672
      targetPort: 15672
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ai-service
  template:
    metadata:
      labels:
        app: ai-service
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: order-service
        image: ghcr.io/azure-samples/aks-store-demo/ai-service:latest
        ports:
        - containerPort: 5001
        env:
        - name: USE_AZURE_OPENAI
          value: ""
        - name: AZURE_OPENAI_DEPLOYMENT_NAME
          value: ""
        - name: AZURE_OPENAI_ENDPOINT
          value: ""
        - name: OPENAI_API_KEY
          value: ""
        - name: OPENAI_ORG_ID
          value: ""
        resources: {}
---
apiVersion: v1
kind: Service
metadata:
  name: ai-service
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 5001
    targetPort: 5001
  selector:
    app: ai-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order-service
  template:
    metadata:
      labels:
        app: order-service
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: order-service
        image: ghcr.io/azure-samples/aks-store-demo/order-service:latest
        ports:
        - containerPort: 3000
        env:
        - name: ORDER_QUEUE_PROTOCOL
          value: "amqp"
        - name: ORDER_QUEUE_HOSTNAME
          value: "rabbitmq"
        - name: ORDER_QUEUE_PORT
          value: "5672"
        - name: ORDER_QUEUE_USERNAME
          value: "username"
        - name: ORDER_QUEUE_PASSWORD
          value: "password"
        - name: FASTIFY_ADDRESS
          value: "0.0.0.0"
        resources: {}
---
apiVersion: v1
kind: Service
metadata:
  name: order-service
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 3000
    targetPort: 3000
  selector:
    app: order-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: makeline-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: makeline-service
  template:
    metadata:
      labels:
        app: makeline-service
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: makeline-service
        image: ghcr.io/azure-samples/aks-store-demo/makeline-service:latest
        ports:
        - containerPort: 3001
        env:
        - name: ORDER_QUEUE_CONNECTION_STRING
          value: "amqp://username:password@rabbitmq:5672/"
        - name: ORDER_QUEUE_NAME
          value: "orders"
        - name: ORDER_DB_CONNECTION_STRING
          value: "mongodb://mongodb:27017"
        - name: ORDER_DB_NAME
          value: "orderdb"
        - name: ORDER_DB_COLLECTION_NAME
          value: "orders"
        resources: {}
---
apiVersion: v1
kind: Service
metadata:
  name: makeline-service
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 3001
    targetPort: 3001
  selector:
    app: makeline-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: store-front
spec:
  replicas: 1
  selector:
    matchLabels:
      app: store-front
  template:
    metadata:
      labels:
        app: store-front
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: store-front
        image: ghcr.io/azure-samples/aks-store-demo/store-front:latest
        ports:
        - containerPort: 8080
          name: store-front
        env:
        - name: ORDER_SERVICE_URL
          value: "http://order-service:3000/"
        - name: PRODUCT_SERVICE_URL
          value: "http://product-service:3000/"          
        resources: {}
---
apiVersion: v1
kind: Service
metadata:
  name: store-front
spec:
  ports:
  - port: 8080
  selector:
    app: store-front
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: store-admin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: store-admin
  template:
    metadata:
      labels:
        app: store-admin
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: store-admin
        image: ghcr.io/azure-samples/aks-store-demo/store-admin:latest
        ports:
        - containerPort: 8080
          name: store-admin
        env:
        - name: PRODUCT_SERVICE_URL
          value: "http://productservice:3002/"
        - name: MAKELINE_SERVICE_URL
          value: "http://makelineservice:3001/"
        resources: {}
---
apiVersion: v1
kind: Service
metadata:
  name: store-admin
spec:
  ports:
  - port: 8080
  selector:
    app: store-admin
  type: LoadBalancer  
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: virtual-customer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: virtual-customer
  template:
    metadata:
      labels:
        app: virtual-customer
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: virtual-worker
        image: ghcr.io/azure-samples/aks-store-demo/virtual-customer:latest
        env:
        - name: ORDER_SERVICE_URL
          value: http://order-service:3000/
        - name: ORDERS_PER_HOUR
          value: "100"
        resources: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: virtual-worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: virtual-worker
  template:
    metadata:
      labels:
        app: virtual-worker
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: virtual-worker
        image: ghcr.io/azure-samples/aks-store-demo/virtual-worker:latest
        env:
        - name: MAKELINE_SERVICE_URL
          value: http://makeline-service:3001
        - name: ORDERS_PER_HOUR
          value: "100"
        resources: {}