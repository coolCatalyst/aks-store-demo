name: package-ai-service

on:
  push:
    branches:
      - 'main'
    paths:
      - 'ai-service/**'

  workflow_dispatch:

jobs:
  publish-container-image:
    
    runs-on: ubuntu-latest

    steps:
      - name: Set environment variables
        id: set-variables
        run: |
          echo "REPOSITORY=ghcr.io/azure-samples/aks-store-demo" >> "$GITHUB_OUTPUT"
          echo "PROJECT=ai-service" >> "$GITHUB_OUTPUT"
          echo "IMAGE=ai-service" >> "$GITHUB_OUTPUT"
          echo "VERSION=$(echo ${GITHUB_SHA} | cut -c1-7)" >> "$GITHUB_OUTPUT"
          echo "CREATED=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> "$GITHUB_OUTPUT"

      - name: Env variable output
        id: test-variables
        run: |
          echo ${{ steps.set-variables.outputs.REPOSITORY }}
          echo ${{ steps.set-variables.outputs.PROJECT }}
          echo ${{ steps.set-variables.outputs.IMAGE }}
          echo ${{ steps.set-variables.outputs.VERSION }}
          echo ${{ steps.set-variables.outputs.CREATED }}

      # - name: Checkout code
      #   uses: actions/checkout@v2

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2
      
      # - name: Login to GitHub Container Registry
      #   uses: docker/login-action@v1 
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.CR_PAT }}        
      
      # - name: Build and push
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: src/ai-service
      #     file: src/ai-service/Dockerfile
      #     push: true
      #     tags: |
      #       ${{ needs.set-env.outputs.repository }}/${{ needs.set-env.outputs.image }}:latest
      #       ${{ needs.set-env.outputs.repository }}/${{ needs.set-env.outputs.image }}:${{ needs.set-env.outputs.version }}
      #     labels: |
      #       org.opencontainers.image.source=${{ github.repositoryUrl }}
      #       org.opencontainers.image.created=${{ needs.set-env.outputs.created }}
      #       org.opencontainers.image.revision=${{ needs.set-env.outputs.version }}